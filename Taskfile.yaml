version: '3'

tasks:
  build:
    desc: Build ain as a binary in the root folder
    cmds:
      - go build -o ain cmd/ain/main.go

  build:release:
    desc: Builds all release binaries using goreleaser
    cmds:
      - goreleaser release --clean --snapshot

  run:
    desc: runs develop version of ain with arguments
    cmds:
      - go run cmd/ain/main.go {{.CLI_ARGS}}

  run:stdsplit:
    desc: runs develop version of ain and annotates stdout, stderr
    cmds:
      - "go run cmd/ain/main.go {{.CLI_ARGS}} > >(sed 's/^/(o): /') 2> >(sed 's/^/(e): /' >&2)"

  test:
    desc: Run tests
    cmds:
      - go test ./...

  test:e2e:files:
    desc: Run e2e tests for files specified as arguments
    cmds:
      - go test test/e2e/e2e_test.go -- {{.CLI_ARGS}}

  test:cover:
    desc: Run tests with coverage
    env:
      E2EGOCOVERDIR: "{{.PWD}}/cov/e2e"
    cmds:
      - rm -r {{.PWD}}/cov/
      - mkdir -p {{.PWD}}/cov/unit {{.PWD}}/cov/e2e
      - go test -cover ./... -args -test.gocoverdir="{{.PWD}}/cov/unit"
      - go tool covdata textfmt -i=./cov/unit,./cov/e2e -o cov/profile.out
      - go tool cover -html=cov/profile.out -o cov/coverage.html
      - xdg-open cov/coverage.html

  update:docs:
    desc: Update README.md toc
    cmds:
      - npx doctoc --github --notitle --maxlevel=2 --update-only README.md

  debug:dlv:
    desc: Run ain with delve debugger
    cmds:
      - dlv debug --headless --api-version=2 --listen=:2345 cmd/ain/main.go -- {{.CLI_ARGS}}
